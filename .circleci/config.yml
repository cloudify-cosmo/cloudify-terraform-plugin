version: 2.1

orbs:
  node: cloudify/public-unittest-orb@volatile
  wagonorb: cloudify/wagon-bulder-orb@volatile
  releaseorb: cloudify/release-orb@volatile
  managerorb: cloudify/manager-orb@volatile

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:

  py36:
    environment:
      PYENV_VERSION: 3.6.5
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-2004:202201-02

commands:

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-test-manager -l $TEST_LICENSE --generate-new-aws-token -es aws_access_key_id=$aws_access_key_id -es aws_secret_access_key=$aws_secret_access_key --yum-package python-netaddr --yum-package git -p $(find ~/project/workspace/build/ -name *centos-Core*x86_64.wgn)  ~/project/plugin.yaml
      - run: ecosystem-test upload-plugin -PN utilities

  run_tf_vm_test:
    steps:
      - run: ecosystem-test local-blueprint-test -b examples/blueprint-examples/virtual-machine/aws-terraform.yaml --test-id=virtual-machine -i aws_region_name=us-west-2 -i env_name="$CIRCLE_BUILD_NUM" --on-failure=uninstall-force --timeout=1800 --nested-test=.circleci/test_features.py

  run_ui_test:
    steps:
      - run: wget https://github.com/cloudify-cosmo/cloudify-stage/raw/master/test/cypress/fixtures/blueprints/topology.zip
      - run: unzip topology.zip
      - run: ecosystem-test local-blueprint-test -b terraform-bp/blueprint.yaml --on-failure=uninstall-force --timeout=1800 --nested-test=.circleci/test_ui_features.py


jobs:
  integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_tf_vm_test
      - run_ui_test

workflows:
  version: 2.1
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_documentation_job
      - node/validate_version_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - integration_tests_py3:
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - node/unittests_job
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - integration_tests_py3
      - releaseorb/merge_docs_job:
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job

  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,2,4,6"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - integration_tests_py3:
          requires:
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/arch64_wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
